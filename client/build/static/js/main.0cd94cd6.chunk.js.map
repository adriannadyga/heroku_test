{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostCounter/PostCounter.js","components/features/PostCounter/PostCounterContainer.js","components/pages/Posts/PostsPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/posts/AddPost/AddPost.js","components/features/PostSingle/PostSingle.js","components/features/PostSingle/PostSingleContainer.js","components/posts/SinglePostPage/SinglePostPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","startRequest","type","START_REQUEST","endRequest","END_REQUEST","errorRequest","error","ERROR_REQUEST","loadPostsByPage","payload","LOAD_POSTS_PAGE","LOAD_POSTS","LOAD_SINGLE_POST","RESET_REQUEST","initialState","data","pending","success","singlePost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","previousStep","nextStep","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","textin","defaultProps","connect","dispatch","a","async","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostCounter","loadPosts","PostsPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","resetRequest","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPost","PostSingle","loadPost","match","params","appId","href","toString","console","log","loadSinglePostRequest","SinglePostPage","ContactPage","NotFoundPage","App","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd94cd6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\n\nimport './Logo.scss';\n\nconst Logo = ({ links, location }) => (\n  <h1 className=\"logo\">Blog.app</h1>\n);\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport './MainMenu.scss';\n\nconst MainMenu = ({ links, location }) => (\n  <ul className=\"main-menu\">\n    { links.map((link, index) =>\n      <li key={index}>\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\n      </li>\n    )}\n  </ul>\n);\n\nMainMenu.propTypes = {\n  links: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  })),\n};\n\nexport default withRouter(props => <MainMenu {...props}/>);\n","import React from 'react';\nimport Logo from '../../common/Logo/Logo';\nimport MainMenu from '../../layout/MainMenu/MainMenu';\nimport './NavBar.scss'\n\nclass NavBar extends React.Component {\n\n  state = {\n    links: [\n      { path: '/', title: 'Home' },\n      { path: '/posts/new', title: 'Add post' },\n      { path: '/posts', title: 'Posts' },\n      { path: '/contact', title: 'Contact' },\n    ],\n  }\n\n  render() {\n    const {links} = this.state;\n    \n    return (\n      <nav className=\"navbar\">\n        <Logo/>\n        <MainMenu links={links}></MainMenu>\n     </nav>\n    );\n  }\n}\n\nexport default NavBar;","import React from 'react';\nimport PageContainer from '../PageContainer/PageContainer';\nimport NavBar from '../../features/NavBar/NavBar';\n\nconst MainLayout = ({ children }) => (\n  <div>\n    <PageContainer>\n      <NavBar />\n      {children}\n    </PageContainer>\n  </div>\n);\n\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\nexport const BASE_URL = 'https://mern31-6.herokuapp.com';\n\n","import axios from 'axios';\nimport { API_URL } from '../config';\nimport { BASE_URL } from '../config';\n\n\n/* SELECTORS */\nexport const getPosts = ({ posts }) => posts.data;\nexport const getSinglePost = ({ posts }) => posts.singlePost;\nexport const counterPosts = ({ posts }) => posts.data.length;\nexport const getRequest = ({ posts }) => posts.request;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\nexport const presentPage = ({ posts }) => posts.presentPage;\n\n/* ACTIONS */\n// action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\nexport const resetRequest = () => ({type: RESET_REQUEST});\nexport const loadPostsByPage = payload => ({payload, type: LOAD_POSTS_PAGE});\n\n\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\n\n/* INITIAL STATE */\nconst initialState = {\n  data: [],\n  request: {\n    pending: false,\n    error: null,\n    success: null,\n  },\n  singlePost: [],\n  amount: 0,\n  postsPerPage: 5,\n  presentPage: 1,\n};\n\n/* THUNKS */\n//load all Posts\nexport const loadPostsRequest = () => {\n    return async dispatch => {\n\n      dispatch(startRequest());\n      try {\n  \n        let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\n        //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\n        dispatch(loadPosts(res.data));\n        dispatch(endRequest());\n  \n      } catch(e) {\n        dispatch(errorRequest(e.message));\n      }\n  \n    };\n  };\n\n//Load single Post\n  export const loadSinglePostRequest = id => {\n    return async dispatch => {\n\n      dispatch(startRequest());\n      try {\n  \n        let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\n        //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\n        dispatch(loadSinglePost(res.data));\n        dispatch(endRequest());\n  \n      } catch(e) {\n        dispatch(errorRequest(e.message));\n      }\n  \n    };\n  };\n\n//add Post\n  export const addPostRequest = (post) => {\n    return async dispatch => {\n\n      dispatch(startRequest());\n      try {\n        await axios.post(`${BASE_URL}${API_URL}/posts`, post);\n        //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\n        dispatch(endRequest());\n  \n      } catch(e) {\n        dispatch(errorRequest(e.message));\n      }\n  \n    };\n  };\n\n  export const loadPostsByPageRequest = (page, postsPerPage) => {\n    return async dispatch => {\n  \n      dispatch(startRequest());\n      try {\n\n        //const postsPerPage = 5;\n  \n        const startAt = (page - 1) * postsPerPage;\n        const limit = postsPerPage;\n  \n        let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\n  \n        const payload = {\n          posts: res.data.posts,\n          amount: res.data.amount,\n          postsPerPage,\n          presentPage: page,\n        };\n  \n        dispatch(loadPostsByPage(payload));\n        dispatch(endRequest());\n  \n      } catch(e) {\n        dispatch(errorRequest(e.message));\n      }\n  \n    };\n  };\n\n/* REDUCER */\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_POSTS:\n        return { ...statePart, data: action.payload };\n    case LOAD_POSTS_PAGE:\n    return {\n      ...statePart,\n      postsPerPage: action.payload.postsPerPage,\n      presentPage: action.payload.presentPage,\n      amount: action.payload.amount,\n      data: [...action.payload.posts],\n    };\n    case LOAD_SINGLE_POST:\n        return {...statePart, singlePost: action.payload };\n    case START_REQUEST:\n        return { ...statePart, request: { pending: true, error: null, success: null  } };\n    case END_REQUEST:\n        return { ...statePart, request: { pending: false, error: null, success: true } };\n    case RESET_REQUEST:\n        return { ...statePart, request: { pending: false, error: null, success: null } };\n    case ERROR_REQUEST:\n        return { ...statePart, request: { pending: false, error: action.error, success: false } };\n    default:\n      return statePart;\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nconst Button = ({ variant = '', children, ...otherProps }) => (\n  <button { ...otherProps } className={ `button button--${variant}`}>\n    { children }\n  </button>\n);\n\nButton.propTypes = {\n  variant: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({ children, ...otherProps }) => (\n  <div {...otherProps} className=\"html-box\">\n    {ReactHtmlParser(children)}\n  </div>\n);\n\nHtmlBox.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default HtmlBox;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport './PostSummary.scss';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../common/Button/Button';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\nimport cutText from '../../../cutText/cutText';\n\nconst PostSummary = ({ id, title, content, author }) => (\n  <article className=\"post-summary\">\n    <SmallTitle>{title}</SmallTitle>\n    <HtmlBox>{cutText(content, 100)}</HtmlBox>\n    <p>Author: {author}</p>\n    <Button variant=\"primary\">\n    <Link to={`/posts/${id}`}>Read more</Link>  \n    </Button>\n  </article>\n);\n\nPostSummary.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  author: PropTypes.string,\n};\n\nexport default PostSummary;","export default (content, maxLength) => {\n    if(content.length < 1) return 'Error';\n    if(content.length <= maxLength) return content;\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\n  };\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport PostSummary from '../PostSummary/PostSummary';\n\nconst PostsList = ({ posts }) => (\n  <div>\n    <section className=\"posts-list\">\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\n    </section>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-animated-css';\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\n\nimport './Alert.scss';\n\nconst Alert = ({ variant = '', children, ...otherProps }) => {\n\n  const icon = () => {\n    switch(variant) {\n      case 'info':\n        return <MdInfoOutline />\n      case 'success':\n        return <MdDone />\n      case 'warning':\n        return <MdErrorOutline />\n      case 'error':\n        return <MdErrorOutline />\n      default:\n        return <MdInfoOutline />\n    }\n  };\n\n  return (\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n      <div {...otherProps} className={`alert alert--${variant}`}>\n        {icon()}\n        <span className=\"alert__desc\">{children}</span>\n      </div>\n    </Animated>\n  )\n\n};\n\nAlert.propTypes = {\n  variant: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.scss';\n\nclass Pagination extends React.Component {\n   \n        state = {\n            presentPage: this.props.initialPage || 1\n        };\n\n    changePage = (newPage) => {\n        const { onPageChange } = this.props;\n      \n        this.setState({ presentPage: newPage });\n        onPageChange(newPage);\n    }\n\n    previousStep = () => {\n        const { presentPage } = this.state;\n        const { changePage } = this;\n        if (presentPage > 1 )\n        changePage(presentPage - 1)\n    }\n\n    nextStep = () => {\n        const { pages} = this.props;\n        const { presentPage } = this.state;\n        const { changePage } = this;\n        if (presentPage < pages )\n        changePage(presentPage + 1)\n    }\n\n    render() {\n        const { pages} = this.props;\n        const { presentPage } = this.state;\n        const { changePage } = this;\n\n        return (\n            <div className='pagination'>\n              <ul className='pagination__list'>\n                { presentPage > 1 ?  (\n                  <li\n                    className={`pagination__list__item${(true) ? ' pagination__list__item--active' : ''\n                      }`}\n                    onClick={this.previousStep}\n                  > \n                   &lt;\n                  </li>) : ''}\n                {[...Array(pages)].map((el, page) => (\n                  <li\n                    key={++page}\n                    onClick={() => {\n                      changePage(page);\n                    }}\n                    className={`pagination__list__item${\n                      page === presentPage ? ' pagination__list__item--active' : ''\n                    }`}\n                  >\n                    {page}\n                  </li>\n                ))}\n                {presentPage === pages ?  '' : (\n                  <li\n                    className={`pagination__list__item${(true) ? ' pagination__list__item--active' : ''}`}\n                    onClick={this.nextStep}\n                  >\n                    &gt;\n                </li>)}\n              </ul>\n            </div>\n          );\n        }\n}\n\nPagination.propTypes = {\npages: PropTypes.number.isRequired,\ninitialPage: PropTypes.number,\nonPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport PostsList from '../PostsList/PostsList';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport Pagination from '../../common/Pagination/Pagination';\n\n\nclass Posts extends React.Component {\n \n  componentDidMount() {\n    const { loadPostsByPage, initialPage, postsPerPage} = this.props;\n    loadPostsByPage(initialPage, postsPerPage);\n  }\n\n  loadPostsPage = (page) => {\n    const { loadPostsByPage, postsPerPage } = this.props;\n    \n    loadPostsByPage(page, postsPerPage);\n  }\n\n  render() {\n    const {posts, request, pages, pagination, presentPage} = this.props;\n    const {loadPostsPage} = this;\n\n    const textin =  request.pending ? ( \n        <Spinner /> \n      ) : request.success && posts.length > 0 ? ( \n        pagination === true ? (\n          <div>\n            <PostsList posts={posts} />\n            <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} />\n          </div>\n      ) : ( \n          <PostsList posts={posts} />\n      )) :  (\n         ( <Alert variant=\"error\"> {request.error} </Alert> || <Alert variant=\"info\"> No posts!!! </Alert>) \n      );\n     \n    return (\n      <div> {textin} </div>\n    );\n  }\n\n};\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ),\n  loadPostsByPage: PropTypes.func.isRequired,\n};\n\nPosts.defaultProps = {\n  initialPage: 1,\n  postsPerPage: 5,\n  pagination: true\n};\n\nexport default Posts;","import { connect } from 'react-redux';\nimport { getPosts, getRequest, getPages, loadPostsByPageRequest, presentPage } from '../../../redux/postsRedux';\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  request: getRequest(state),\n  pages: getPages(state),\n  presentPage: presentPage(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () => (\n  <div>\n  <PageTitle>Blog</PageTitle>\n  <Posts postsPerPage={3} pagination={false} />\n</div>\n);\n\nexport default HomePage;","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nclass PostCounter extends React.Component {\n\n    render() {\n        const {posts} = this.props;\n\n        return (\n            <div>\n            {posts > 0 ? 'Posts amount: ' + posts : ' No posts '}\n            </div>\n        )\n    }\n}\nPostCounter.propTypes = {\n  posts: PropTypes.number,\n};\n\nexport default PostCounter;","import { connect } from 'react-redux';\nimport { counterPosts, loadPostsRequest, getRequest } from '../../../redux/postsRedux';\nimport PostCounter from './PostCounter';\n\nconst mapStateToProps = state => ({\n    posts: counterPosts(state),\n    request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadPosts: () => dispatch(loadPostsRequest()),\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostCounter);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostCounter from  '../../features/PostCounter/PostCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst PostsPage = () => (\n  <div>\n    <PageTitle>Posts list</PageTitle>\n    <PostCounter />\n    <Posts />\n  </div>\n);\n\nexport default PostsPage;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TextField.scss';\n\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\n  <label className=\"text-field\">\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\n  </label>\n);\n\nTextField.propTypes = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SectionTitle.scss';\n\nconst SectionTitle = ({ children }) => (\n  <h2 className=\"section-title\">\n     {children}\n  </h2>\n);\n\nSectionTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SectionTitle;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport Editor from 'react-medium-editor';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\n\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\n\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n \n  state = {\n    post: {\n      title: '',\n      author: '',\n      content: ''\n    }\n  }\n  \n  componentDidMount() {\n    const { resetRequest } = this.props;\n    resetRequest();\n  }\n\n  handleChange  = (e) => {\n    const { post } = this.state;\n    this.setState({ post: {...post, [e.target.name]: e.target.value}});\n  }\n\n  handleEditor  = (text) => {\n    const { post } = this.state;\n    this.setState({ post: {...post, content: text}});\n  }\n\n  addPost = (e) => {\n    const { addPost, resetRequest } = this.props;\n    const { post } = this.state;\n  \n    e.preventDefault();\n    addPost(post);\n    resetRequest();\n  }\n  \n  render() {\n    const { post } = this.state;\n    const { handleChange, handleEditor, addPost  } = this;\n    const { request } = this.props;\n\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\n    else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\n    else if(request.pending) return <Spinner />\n    else return (\n      <form onSubmit={addPost}>\n\n        <TextField\n          label=\"Title\"\n          value={post.title}\n          onChange={handleChange}\n          name=\"title\"\n        />\n\n        <TextField\n          label=\"Author\"\n          value={post.author}\n          onChange={handleChange}\n          name=\"author\"\n        />\n\n        <SectionTitle>Edit post content</SectionTitle>\n        <Editor\n            className=\"content-editor\"\n            text={post.content}\n            onChange={handleEditor}\n            options={{ placeholder: false, \n            toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\n        />\n\n        <Button variant=\"primary\">Add post</Button>\n\n      </form>\n    );\n  }\n};\n\nPostForm.propTypes = {\n    request: PropTypes.object.isRequired,\n    addPost: PropTypes.func.isRequired,\n  };\n\nexport default PostForm;","import { connect } from 'react-redux';\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\nimport PostForm from './PostForm';\n\nconst mapStateToProps = state => ({\n  request: getRequest(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: (post) => dispatch(addPostRequest(post)),\n  resetRequest: () => dispatch(resetRequest()),\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst AddPost = () => (\n  <div>\n    <h1>Add Post</h1>\n    <PostForm/>\n  </div>\n);\n\nexport default AddPost;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\nimport { BASE_URL } from '../../../config.js'\n\nclass PostSingle extends React.Component {\n\n  componentDidMount() {\n    const { loadPost, match} = this.props;\n    loadPost(match.params.id);\n  }\n\n  render() {\n    const {posts, request, location} = this.props;\n\n    const textin =  request.pending ? ( \n        <Spinner /> \n      ) : request.success ? ( \n         posts.length > 0 ? (\n            <article className=\"post-summary\">\n              <SmallTitle>{posts[0].title}</SmallTitle>\n              <HtmlBox>{posts[0].content}</HtmlBox>\n              <p>Author: {posts[0].author}</p>\n              <FacebookProvider appId=\"381113066102363\">\n                <Comments href={`${BASE_URL}/${location.pathname}`} />\n              </FacebookProvider>\n              <FacebookProvider appId=\"381113066102363\"> \n                <ShareButton className=\"fb-share-button\" href={`${BASE_URL}/${location.pathname}`} >\n                  Share this link!\n                </ShareButton>\n              </FacebookProvider>\n            </article> \n      ) : ( \n        <Alert variant=\"info\"> No posts!!! </Alert>\n      )) : ( \n        <Alert variant=\"error\"> {(request.error).toString()} </Alert>,\n        console.log(request.error)\n      );\n\n    return (\n      <div> \n        {textin} \n      </div>\n    );\n  }\n\n};\n\nPostSingle.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ),\n  loadPost: PropTypes.func.isRequired,\n};\n\n\nexport default withRouter(props => <PostSingle {...props} />);","import { connect } from 'react-redux';\nimport { getRequest, loadSinglePostRequest, getSinglePost } from '../../../redux/postsRedux';\nimport PostSingle from './PostSingle';\n\nconst mapStateToProps = state => ({\n  posts: getSinglePost(state),\n  request: getRequest(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadPost: (id) => dispatch(loadSinglePostRequest(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostSingle);","import React from 'react';\nimport SinglePost from '../../features/PostSingle/PostSingleContainer';\n\n\n\nconst SinglePostPage = () => (\n  <div>\n    <SinglePost/>\n  </div>\n);\n\nexport default SinglePostPage;","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () => (\n  <div>\n    <PageTitle>Contact</PageTitle>\n    <p>Your Favourite Blooger Ltd.</p>\n    <p>9432 Division Street</p>\n    <p>Stone Mountain, GA 30083</p>\n  </div>\n);\n\nexport default ContactPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>404 Not Found</h1>\n  </div>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport AddPost from './components/posts/AddPost/AddPost';\nimport SinglePostPage from './components/posts/SinglePostPage/SinglePostPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\n\nclass App extends React.Component {\n \n  render () {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/posts/new\" exact component={AddPost} />\n          <Route path=\"/posts/:id\" exact component={SinglePostPage} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n}\n  \nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n// import reducers\nimport posts from './postsRedux';\n\n// combine reducers\nconst rootReducer = combineReducers({\n    posts,\n  });\n\n  // create store\n  const store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router> \n      <App/> \n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n"],"sourceRoot":""}